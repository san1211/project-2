import cv2
from object_detector1 import *
import numpy as np

detector = HomogeneousBgDetector()

pixel_cm_ratio = float(input("enter pixel per cm ratio(upto 2 decimals)"))

img = cv2.imread()#image file name

counters = detector.detect_objects(img)

for ct in counters:
	

	#making into rectangle
	rectangle = cv2.minAreaRect(ct)
	(x, y), (w, h), angle = rectangle

	#converting width and height of obj by applying ratio pixel to cm
	object_width = w / pixel_cm_ratio
	object_height = h / pixel_cm_ratio

	#displaying
	box = cv2.boxPoints(rectangle)
	box = np.int0(box)

	cv2.circle(img, (int(x), int(y)), 5, (0, 0, 255), -1)
	cv2.polylines(img, [box], True, (255, 0, 0), 2)
	cv2.putText(img, "Width {} cm".format(round(object_width, 4)), (int(x - 50), int(y - 20)), cv2.FONT_HERSHEY_PLAIN, 1, (100, 200, 0), 2)
	cv2.putText(img, "Length {} cm".format(round(object_height, 4)), (int(x - 50), int(y + 20)), cv2.FONT_HERSHEY_PLAIN, 1, (100, 200, 0), 2)

cv2.imshow("Image",img)
cv2.waitKey(0)
